/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.poslogic;

import java.sql.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Leandro
 */
public class userInterface extends javax.swing.JFrame {

    /**
     * Creates new form userInterface
     */
    public userInterface() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        dashBoardView = new javax.swing.JPanel();
        Header = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dashBoardView.setBackground(new java.awt.Color(73, 128, 242));

        Header.setBackground(new java.awt.Color(51, 51, 51));
        Header.setPreferredSize(new java.awt.Dimension(800, 50));
        Header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("add porduct ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        Header.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 20, -1, -1));

        jButton2.setText("edit database");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        Header.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 20, -1, -1));

        jButton3.setText("Display databse ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        Header.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 20, -1, -1));

        jButton4.setText("customer receipt");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        Header.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, -1, -1));

        jButton5.setText("total income");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        Header.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 20, -1, -1));

        jButton6.setText("EXIT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        Header.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 70, 40));

        jButton7.setText("CASH ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTextField2.setText("jTextField2");

        jButton8.setText("CARD");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item", "Quantity", "Price", "Discount Applied"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout dashBoardViewLayout = new javax.swing.GroupLayout(dashBoardView);
        dashBoardView.setLayout(dashBoardViewLayout);
        dashBoardViewLayout.setHorizontalGroup(
            dashBoardViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Header, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(dashBoardViewLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(dashBoardViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashBoardViewLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 909, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                    .addGroup(dashBoardViewLayout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(dashBoardViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))))
                .addContainerGap())
        );
        dashBoardViewLayout.setVerticalGroup(
            dashBoardViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashBoardViewLayout.createSequentialGroup()
                .addGroup(dashBoardViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashBoardViewLayout.createSequentialGroup()
                        .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashBoardViewLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(dashBoardViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashBoardViewLayout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(55, 55, 55))
                    .addGroup(dashBoardViewLayout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        getContentPane().add(dashBoardView, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //Add Product button:
        String productName = JOptionPane.showInputDialog("Enter Product Name:");
        String category = JOptionPane.showInputDialog("Enter Product Category:");
        double price = Double.parseDouble(JOptionPane.showInputDialog("Enter Product Price:"));
        int stock = Integer.parseInt(JOptionPane.showInputDialog("Enter Stock Quantity:"));

        try (Connection conn = DriverManager.getConnection("jdbc:sqlite:pos.db");
            Statement stmt = conn.createStatement()) {

            String insertQuery = "INSERT INTO Products (ProductName, Category, Price, StockQuantity) "
                               + "VALUES ('" + productName + "', '" + category + "', " + price + ", " + stock + ");";
            stmt.executeUpdate(insertQuery);
            JOptionPane.showMessageDialog(null, "Product Added Successfully!");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //Edit database button:
        int productId = Integer.parseInt(JOptionPane.showInputDialog("Enter Product ID to Edit:"));
        String newProductName = JOptionPane.showInputDialog("Enter New Product Name:");
        double newPrice = Double.parseDouble(JOptionPane.showInputDialog("Enter New Price:"));
        int newStock = Integer.parseInt(JOptionPane.showInputDialog("Enter New Stock Quantity:"));

        try (Connection conn = DriverManager.getConnection("jdbc:sqlite:pos.db");
            Statement stmt = conn.createStatement()) {

            String updateQuery = "UPDATE Products SET ProductName = '" + newProductName + "', "
                               + "Price = " + newPrice + ", StockQuantity = " + newStock 
                               + " WHERE ProductID = " + productId;
            stmt.executeUpdate(updateQuery);
            JOptionPane.showMessageDialog(null, "Product Updated Successfully!");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Display database button:
        try (Connection conn = DriverManager.getConnection("jdbc:sqlite:pos.db");
        Statement stmt = conn.createStatement()) {

        String selectQuery = "SELECT * FROM Products";
        ResultSet rs = stmt.executeQuery(selectQuery);

        StringBuilder result = new StringBuilder("Product List:\n");
        while (rs.next()) {
            result.append("ID: ").append(rs.getInt("ProductID"))
                  .append(", Name: ").append(rs.getString("ProductName"))
                  .append(", Price: ").append(rs.getDouble("Price"))
                  .append(", Stock: ").append(rs.getInt("StockQuantity"))
                  .append("\n");
        }

        JOptionPane.showMessageDialog(null, result.toString());

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }                                        
    
    private static final double VAT_RATE = 0.15;
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Customer reciept button:
        Connection conn = null;
        Statement stmt = null;
        double totalPrice = 0.0;

        try {
            // Connect to database
            conn = DriverManager.getConnection("jdbc:sqlite:pos.db");
            stmt = conn.createStatement();

            // Query the database to get order details
            String query = "SELECT Products.ProductName, OrderDetails.Quantity, OrderDetails.Price, Products.Discount "
                         + "FROM OrderDetails "
                         + "JOIN Products ON OrderDetails.ProductID = Products.ProductID "
                         + "WHERE OrderDetails.OrderID = (SELECT MAX(OrderID) FROM Orders)";  // Assuming you want the last order

            ResultSet rs = stmt.executeQuery(query);

            // Set up Table1 to display item details
            DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
            tableModel.setRowCount(0); // Clear existing rows

            // StringBuilder to construct the receipt text
            StringBuilder receipt = new StringBuilder();
            receipt.append("Receipt:\n");
            receipt.append("--------------------------------------------------\n");

            // Iterate through the result set and populate the table and receipt
            while (rs.next()) {
                String productName = rs.getString("ProductName");
                int quantity = rs.getInt("Quantity");
                double price = rs.getDouble("Price");
                double discount = rs.getDouble("Discount");

                // Calculate the price after applying discount 
                double discountAmount = (discount > 0) ? price * (discount / 100) : 0;
                double finalPrice = price - discountAmount;
                double totalItemPrice = finalPrice * quantity;
                totalPrice += totalItemPrice;

                // Append to receipt
                receipt.append(String.format("%s x%d @ %.2f (Discount: %.2f%%)\n", productName, quantity, price, discount));
                receipt.append(String.format("Item Total: %.2f\n", totalItemPrice));

                // Add row to table
                tableModel.addRow(new Object[]{productName, quantity, price, discount});
            }

            // Append total price and VAT to receipt
            double vatAmount = totalPrice * VAT_RATE;
            double totalPriceWithVAT = totalPrice + vatAmount;
            receipt.append("--------------------------------------------------\n");
            receipt.append(String.format("Total: %.2f\n", totalPrice));
            receipt.append(String.format("VAT @ %.2f%%: %.2f\n", VAT_RATE * 100, vatAmount));
            receipt.append(String.format("Total with VAT: %.2f\n", totalPriceWithVAT));

            // Display receipt in textarea1
            jTextArea1.setText(receipt.toString());

            // Display total price including VAT in textField2
            jTextField2.setText(String.format("%.2f", totalPriceWithVAT));

            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }                                        

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Total income button:
        try (Connection conn = DriverManager.getConnection("jdbc:sqlite:pos.db");
            Statement stmt = conn.createStatement()) {

            String totalIncomeQuery = "SELECT SUM(TotalAmount) AS TotalIncome FROM Orders";
            ResultSet rs = stmt.executeQuery(totalIncomeQuery);

            if (rs.next()) {
                double totalIncome = rs.getDouble("TotalIncome");
                JOptionPane.showMessageDialog(null, "Total Income: R" + totalIncome);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }                                        

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Exit button:
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Exit", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }                                        

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Card Payment button:
        double totalAmount = Double.parseDouble(jTextField2.getText());  // Assuming the total price with VAT is in jTextField2
        String cardNumber = JOptionPane.showInputDialog("Enter Card Number:");

        // Logic to process the card payment could be added here (e.g., through a payment gateway API)
        JOptionPane.showMessageDialog(null, "Payment of R" + totalAmount + " made via card ending in " + cardNumber.substring(cardNumber.length() - 4));
    }                                        

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Cash payment button:
        // Cash Payment button:
        double totalAmount = Double.parseDouble(jTextField2.getText());
        double cashReceived = Double.parseDouble(JOptionPane.showInputDialog("Enter Cash Amount:"));

        if (cashReceived >= totalAmount) {
            double change = cashReceived - totalAmount;
            JOptionPane.showMessageDialog(null, "Payment successful! Change: R" + change);
        } else {
            JOptionPane.showMessageDialog(null, "Insufficient cash. Please enter an amount greater than or equal to the total.");
        }
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JPanel Header;
    private javax.swing.JPanel dashBoardView;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration                   
}

