/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.poslogic;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eugen
 */
public class SpecialsGui extends javax.swing.JFrame {

    /**
     * Creates new form SpecialsGui
     */
    public SpecialsGui() {
        initComponents();
        retrieveDataFromDatabase();
    }
    
    private void retrieveDataFromDatabase() {
        DefaultTableModel model = (DefaultTableModel) MainProductsTable.getModel();
        model.setRowCount(0);
        
        try (Connection conn = DriverManager.getConnection("jdbc:sqlite:dataBasePos.db")) {           
            String sql = "SELECT product_name, barcode, discount FROM products";
            try (PreparedStatement pstmt = conn.prepareStatement(sql);
                 ResultSet rs = pstmt.executeQuery()) {

                
                while (rs.next()) {
                    String productName = rs.getString("product_name");  //Gets the product name from database
                    String barcode = rs.getString("barcode");           //Gets the barcode from database
                    Integer discount = rs.getInt("discount");           //Gets the dicount from the database
                    model.addRow(new Object[]{productName, barcode, discount});//Sets the values of the table  
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
            System.out.println("SpecialsGui Error 1");
        }
    }
    
    private void UpdateDatabase(String barcode, Integer discount) {
        try (Connection conn = DriverManager.getConnection("jdbc:sqlite:dataBasePos.db")) { 
            String sql = "UPDATE products SET discount = " + discount + " WHERE barcode = " + barcode;                      
            PreparedStatement pstmt = conn.prepareStatement(sql);  
            pstmt.executeUpdate();   
            System.out.println("Database updated");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
            System.out.println("SpecialsGui Error 1");
        }
    }
    
    private String GetBarcode() {        
        String barcode = JOptionPane.showInputDialog("Enter product barcode:");       
        while (barcode.length() == 0) {         //Checks that a value has been entered
            barcode = JOptionPane.showInputDialog("Invalid barcode enter product barcode:");
        }         
        return barcode;
    }
    
    private Integer GetDiscount() {
        Integer Discount = 0; 
        Integer Check = 0;
        String DiscountS = JOptionPane.showInputDialog("Enter discount to apply:");
        
        while (Check == 0) { 
            try {
                Discount = Integer.valueOf(DiscountS);
                Check = 1;
            }
            catch (NumberFormatException e) {
                DiscountS = JOptionPane.showInputDialog("Invalid number enter discount to apply:"); 
            }    
        } 
        return Discount;
    }
    
    private void AddDiscount() {
        try {
            String barcode = GetBarcode();
            Integer Discount = GetDiscount();  
            
            UpdateDatabase(barcode, Discount);
            retrieveDataFromDatabase();
        } catch (NullPointerException e) {
            System.out.println("Input Cancelled");
        }
    }
    
    private void RemoveDiscount() {  
        try {
            String barcode = GetBarcode();
            
            UpdateDatabase(barcode, 0);
            retrieveDataFromDatabase();
        } catch (NullPointerException e) {
            System.out.println("Input Cancelled");
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        MainProductsTable = new javax.swing.JTable();
        AddSpecialButton = new javax.swing.JButton();
        RemoveSpecialButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "Product Name", "Discount"
            }
        ));
        jScrollPane1.setViewportView(MainProductsTable);

        AddSpecialButton.setText("Add Special");
        AddSpecialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSpecialButtonActionPerformed(evt);
            }
        });

        RemoveSpecialButton.setText("Remove Special");
        RemoveSpecialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveSpecialButtonActionPerformed(evt);
            }
        });

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AddSpecialButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RemoveSpecialButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddSpecialButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveSpecialButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ExitButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        StockGUI stock = new StockGUI();
        stock.setVisible(true);
        dispose();
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void AddSpecialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSpecialButtonActionPerformed
        // TODO add your handling code here:
        AddDiscount();
        
    }//GEN-LAST:event_AddSpecialButtonActionPerformed

    private void RemoveSpecialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveSpecialButtonActionPerformed
        // TODO add your handling code here:
        RemoveDiscount();
    }//GEN-LAST:event_RemoveSpecialButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpecialsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpecialsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpecialsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpecialsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpecialsGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddSpecialButton;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTable MainProductsTable;
    private javax.swing.JButton RemoveSpecialButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
